{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getTabByID","tabs","tabId","find","tab","id","Tabs","props","selectedTabId","onTabSelected","validSelectedTabId","content","className","map","title","classNames","onClick","handleClick","href","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASMA,EAAa,SAACC,EAAaC,GAC/B,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAUD,EAAK,IAGvCK,EAAwB,SAACC,GACpC,IACEN,EAGEM,EAHFN,KACAO,EAEED,EAFFC,cACAC,EACEF,EADFE,cAGF,EAA4CT,EAAWC,EAAMO,GAAjDE,EAAZ,EAAQL,GAAwBM,EAAhC,EAAgCA,QAQhC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGX,EAAKY,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAP,OAER,aADA,CACA,MAEEF,UAAWG,IACT,CAAE,YAAaV,IAAOK,IAExB,UAAQ,MACRM,QAAS,kBAlBD,SAACX,GACfA,IAAOK,GACTD,EAAeT,EAAWC,EAAMI,IAgBTY,CAAYZ,IAN7B,SAQE,mBAAGa,KAAI,WAAMb,GAAM,UAAQ,UAA3B,SACGS,KARET,UAeb,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QC1CIV,EAAO,CAClB,CAAEI,GAAI,QAASS,MAAO,QAASH,QAAS,eACxC,CAAEN,GAAI,QAASS,MAAO,QAASH,QAAS,eACxC,CAAEN,GAAI,QAASS,MAAO,QAASH,QAAS,gBAG7BQ,EAAgB,WAC3B,MAAsCC,mBAASnB,EAAK,IAApD,mBAAOoB,EAAP,KAAoBC,EAApB,KACQjB,EAAcgB,EAAdhB,GAAIS,EAAUO,EAAVP,MAMZ,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,KAGtB,cAAC,EAAD,CACEb,KAAMA,EACNO,cAAeH,EACfI,cAboB,SAACL,GACzBkB,EAAelB,UCjBnBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fc136c55.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nconst getTabByID = (tabs: Tab[], tabId: string) => {\n  return tabs.find(tab => tab.id === tabId) || tabs[0];\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const { id: validSelectedTabId, content } = getTabByID(tabs, selectedTabId);\n\n  const handleClick = (id: string) => {\n    if (id !== validSelectedTabId) {\n      onTabSelected((getTabByID(tabs, id)));\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title }) => (\n            // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n            <li\n              key={id}\n              className={classNames(\n                { 'is-active': id === validSelectedTabId },\n              )}\n              data-cy=\"Tab\"\n              onClick={() => handleClick(id)}\n            >\n              <a href={`#${id}`} data-cy=\"TabLink\">\n                {title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tab } from './types/tab';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const { id, title } = selectedTab;\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={id}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}